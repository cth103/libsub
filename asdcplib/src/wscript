def configure(conf):
    conf.env.append_value('CXXFLAGS', '-D_FILE_OFFSET_BITS=64')
    conf.env.append_value('CXXFLAGS', '-DPACKAGE_VERSION="1.9.45-carlh"')
    if conf.options.target_windows:
        conf.env.append_value('CXXFLAGS', '-DASDCP_PLATFORM="win32"')
        conf.env.append_value('CXXFLAGS', '-DKM_WIN32')
    else:
        conf.env.append_value('CXXFLAGS', '-DASDCP_PLATFORM="linux"')

def build(bld):
    if bld.env.STATIC:
        obj = bld(features = 'cxx cxxstlib')
    else:
        obj = bld(features = 'cxx cxxshlib')

    obj.name = 'libkumu-libsub%s' % bld.env.API_VERSION
    obj.target = 'kumu-libsub%s' % bld.env.API_VERSION
    obj.uselib = 'OPENSSL BOOST_FILESYSTEM'
    obj.includes = ['.']
    obj.export_includes = ['.']
    obj.source = """
                 KM_fileio.cpp
                 KM_log.cpp
		 KM_util.cpp
		 KM_xml.cpp
                 KM_tai.cpp
                 KM_prng.cpp
                 """

    if bld.env.STATIC:
        obj = bld(features = 'cxx cxxstlib')
    else:
        obj = bld(features = 'cxx cxxshlib')

    obj.name = 'libasdcp-libsub%s' % bld.env.API_VERSION
    obj.target = 'asdcp-libsub%s' % bld.env.API_VERSION
    obj.uselib = 'OPENSSL'
    obj.use = 'libkumu-libsub%s' % bld.env.API_VERSION
    obj.includes = ['.']
    obj.export_includes = ['.']
    obj.source = """
		 MPEG2_Parser.cpp
                 MPEG.cpp
                 JP2K_Codestream_Parser.cpp
		 JP2K_Sequence_Parser.cpp
                 JP2K.cpp
                 PCM_Parser.cpp
                 Wav.cpp
		 TimedText_Parser.cpp
                 KLV.cpp 
                 Dict.cpp
                 MXFTypes.cpp
                 MXF.cpp
		 Index.cpp
                 Metadata.cpp
                 AS_DCP.cpp
                 AS_DCP_MXF.cpp
                 AS_DCP_AES.cpp
                 h__Reader.cpp
                 h__Writer.cpp
                 AS_DCP_MPEG2.cpp
                 AS_DCP_JP2K.cpp
                 AS_DCP_PCM.cpp
                 AS_DCP_TimedText.cpp
                 PCMParserList.cpp
                 MDD.cpp
                 """

    if bld.env.STATIC:
        bld.install_files('${PREFIX}/lib', 'libkumu-libsub%s.a' % bld.env.API_VERSION)
        bld.install_files('${PREFIX}/lib', 'libasdcp-libsub%s.a' % bld.env.API_VERSION)
